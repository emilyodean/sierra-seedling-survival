30*27
?rbinom
response = rbinom(810, .5)
response = rbinom(810, prob=.5)
response = rbinom(size=810, prob=.5)
response = rbinom(size=810, n=810, prob=.5)
response
,
response = rbinom(size=1, n=810, prob=.5)
response
n = 10
beta0 = -1.6
beta1 = 0.03
temp = runif(n=n, min=18, max=60)
n = 10
beta0 = -1.6
beta1 = 0.03
temp = runif(n=n, min=18, max=60)
pi_x = exp(beta0 + beta1 * x) / (1 + exp(beta0 + beta1 * x))
y = rbinom(n=length(x), size=1, prob=pi_x)
data = data.frame(x, pi_x, y)
names(data) <- c("temp", "pi", "mortality")
print(data)
n = 10
beta0 = -1.6
beta1 = 0.03
temp = runif(n=n, min=18, max=60)
pi_x = exp(beta0 + beta1 * x) / (1 + exp(beta0 + beta1 * x))
x = runif(n=n, min=18, max=60)
pi_x = exp(beta0 + beta1 * x) / (1 + exp(beta0 + beta1 * x))
y = rbinom(n=length(x), size=1, prob=pi_x)
data = data.frame(x, pi_x, y)
names(data) <- c("temp", "pi", "mortality")
print(data)
temperature = c(20, 25, 30)
moisture = c(.4, .7, 1)
gsd = c(120, 140, 160)
first_run = expand.grid(t=temperature,m=moisture,g=gsd)
my_data = data.frame(t=rep(first_run$t,30), m=rep(first_run$m,30), g=rep(first_run$g,30), y=rbinom(27*30, 1, .5))
my_data
fit = glm(y ~ t + m + g, data=my_data, family=binomial)
fit
B0 = fit$coeff[[1]]
B1 = fit$coeff[[2]]
B2 = fit$coeff[[3]]
B3 = fit$coeff[[4]]
link = B0 + my_data$t * B1 + my_data$m * B2 + my_data$g * B3
logit = exp(link)/(1+exp(link))
runis = runif(length(logit),0,1)
ytest = ifelse(runis < logit,1,0)
ytest
fit = glm(ytest ~ t + m + g, data=my_data, family=binomial)
fit
?glm
fit = glm(y ~ t + m + g + t*m, data=my_data, family=binomial)
fit
fit = glm(y ~ t + m + g + t*m + t*g + m*g + t*m*g, data=my_data, family=binomial)
fit
summary(fit)
B0 = 1#fit$coeff[[1]]
B1 = 2#fit$coeff[[2]]
B2 = .5#fit$coeff[[3]]
B3 = .2#fit$coeff[[4]]
link = B0 + my_data$t * B1 + my_data$m * B2 + my_data$g * B3
link
logit = exp(link)/(1+exp(link))
runis = runif(length(logit),0,1)
ytest = ifelse(runis < logit,1,0)
fit = glm(ytest ~ t + m + g, data=my_data, family=binomial)
ytest
runis = runif(length(logit),0,1)
runis
logit = exp(link)/(1+exp(link))
logit
link = B0 + my_data$t * B1 + my_data$m * B2 + my_data$g * B3
logit = exp(link)/(1+exp(link))
logit
B0 = 1#fit$coeff[[1]]
B1 = -2#fit$coeff[[2]]
B2 = .5#fit$coeff[[3]]
B3 = .2#fit$coeff[[4]]
link = B0 + my_data$t * B1 + my_data$m * B2 + my_data$g * B3
logit = exp(link)/(1+exp(link))
logit
y = logit > 0.5
y
logit = 1/(1+exp(-link))
y = logit > 0.5
y
logit
fit = glm(y ~ t + m + g + t*m + t*g + m*g + t*m*g, data=my_data, family=binomial)
fit
fit = glm(y ~ t + m + g, data=my_data, family=binomial)
fit
summary(fit)
B0 = -1.5#fit$coeff[[1]]
B1 = 0.1#fit$coeff[[2]]
B2 = .2#fit$coeff[[3]]
B3 = -.05#fit$coeff[[4]]
link = B0 + my_data$t * B1 + my_data$m * B2 + my_data$g * B3
logit = 1/(1+exp(-link))
logit
B0 = -1.4#fit$coeff[[1]]
B1 = 0.1#fit$coeff[[2]]
B2 = .2#fit$coeff[[3]]
B3 = -.05#fit$coeff[[4]]
link = B0 + my_data$t * B1 + my_data$m * B2 + my_data$g * B3
logit = 1/(1+exp(-link))
logit
logit = exp(link)/(1+exp(link))
logit
fit = glm(y ~ t + m + g, data=my_data, family=binomial)
fit
B0 = fit$coeff[[1]]
B1 = fit$coeff[[2]]
B2 = fit$coeff[[3]]
B3 = fit$coeff[[4]]
link = B0 + my_data$t * B1 + my_data$m * B2 + my_data$g * B3
logit = exp(link)/(1+exp(link)) #1/(1+exp(-link))
logit
ln(.5)
temperature = c(20, 25, 30)
moisture = c(.4, .7, 1)
gsd = c(120, 140, 160)
first_run = expand.grid(t=temperature,m=moisture,g=gsd)
#create table w/ 30 replicates of all combinations + y values
my_data = data.frame(t=rep(first_run$t,30), m=rep(first_run$m,30), g=rep(first_run$g,30), y=rbinom(27*30, 1, .5))
fit = glm(y ~ t + m + g, data=my_data, family=binomial) # 0 is dead and 1 is alive
summary(fit)
fit = glm(y ~ t + m + g + t*m + t*g + m*g + t*m*g, data=my_data, family=binomial)
summary(fit)
fit = glm(y ~ t + m + g + t*m + t*g + m*g + t*m*g, data=my_data, family=binomial)
fit
summary(fit)
fit = glm(y ~ t + m + g, data=my_data, family=binomial) # 0 is dead and 1 is alive
summary(fit)
write.table(my_data, "dummy_data.csv")
getwd()
setwd("/Users/emilyodean/Documents")
setwd("/Users/emilyodean/CodeProjects/Ecological Modeling/")
write.table(my_data, "dummy_data.csv")
fit2 = glm(y ~ t + m, data=my_data, family=binomial)
summary(fit2)
fit2 = glm(y ~ t + m + t*m, data=my_data, family=binomial)
summary(fit2)
fit2 = glm(y ~ t + m, data=my_data, family=binomial)
library(dismo)
install.packages("dismo")
library(dismo)
file <- paste(system.file(package="dismo"), "/ex/bradypus.csv", sep="")
file
bradypus <- read.table(file, header=TRUE, sep=",")
?gbif
wf = gbif("abies", "concolor", geo=FALSE)
data(wf)
wf
summary(wf)
colnames(wf)
acgeo = subset(wf, !is.na(lon) & !is.na(lat))
nrow(acgeo)
wf2 = gbif("abies", "concolor", geo=TRUE)
nrow(wf)
nrow(wf2)
wf.geo = subset(wf, !is.na(lon) & !is.na(lat))
rf = gbif("abies", "magnifica", geo=FALSE)
rf.geo = subset(wf, !is.na(lon) & !is.na(lat))
nrow(rf.geo)
nrow(rf)
rf.geo = subset(rf, !is.na(lon) & !is.na(lat))
nrow(rf.geo)
library(maptools)
install.packages("maptools")
library(maptools)
data(wrld_simpl)
plot(wrld_simpl, xlim=c(-80,70), ylim=c(-60,10), axes=TRUE, col="light yellow")
plot(wrld_simpl, xlim=c(100,70), ylim=c(-60,10), axes=TRUE, col="light yellow")
plot(wrld_simpl, xlim=c(100,100), ylim=c(-60,10), axes=TRUE, col="light yellow")
plot(wrld_simpl, xlim=c(70,100), ylim=c(-60,10), axes=TRUE, col="light yellow")
plot(wrld_simpl, xlim=c(100,150), ylim=c(-60,10), axes=TRUE, col="light yellow")
plot(wrld_simpl, xlim=c(200,250), ylim=c(-60,10), axes=TRUE, col="light yellow")
dim(wf)
head(wf)
head(wf)$lat
head(wf)$lon
plot(wrld_simpl, xlim=c(-130,50), ylim=c(10,70), axes=TRUE, col="light yellow")
plot(wrld_simpl, xlim=c(-130,30), ylim=c(10,70), axes=TRUE, col="light yellow")
plot(wrld_simpl, xlim=c(-130,10), ylim=c(10,70), axes=TRUE, col="light yellow")
plot(wrld_simpl, xlim=c(-130,-20), ylim=c(10,70), axes=TRUE, col="light yellow")
plot(wrld_simpl, xlim=c(-130,-50), ylim=c(10,70), axes=TRUE, col="light yellow")
plot(wrld_simpl, axes=TRUE, col="light yellow")
points(wf.geo$lon, wf.geo$lat, col=✬orange✬, pch=20, cex=0.75)
points(wf.geo$lon, wf.geo$lat, col='orange', pch=20, cex=0.75)
colnames(wf)
head(wf)$country
wf.geo = subset(wf, !is.na(lon) & !is.na(lat) & country == "United States")
dim(wf.geo)
points(wf.geo$lon, wf.geo$lat, col='orange', pch=20, cex=0.75)
plot(wrld_simpl, axes=TRUE, col="light yellow")
points(wf.geo$lon, wf.geo$lat, col='orange', pch=20, cex=0.75)
?plot
?wrld_simpl
plot(wrld_simpl, NAME="United States" axes=TRUE, col="light yellow")
plot(wrld_simpl, country="United States" axes=TRUE, col="light yellow")
plot(wrld_simpl, region="United States" axes=TRUE, col="light yellow")
plot(wrld_simpl, region="United States", axes=TRUE, col="light yellow")
plot(wrld_simpl, country="United States", axes=TRUE, col="light yellow")
plot(wrld_simpl, axes=TRUE, col="light yellow")
plot(wrld_simpl, xlim=c(-130,-50), ylim=c(10,70), axes=TRUE, col="light yellow")
plot(wrld_simpl, xlim=c(-130,-50), ylim=c(10,50), axes=TRUE, col="light yellow")
plot(wrld_simpl, xlim=c(-130,-50), ylim=c(20,50), axes=TRUE, col="light yellow")
plot(wrld_simpl, xlim=c(-130,-50), ylim=c(30,50), axes=TRUE, col="light yellow")
plot(wrld_simpl, xlim=c(-120,-50), ylim=c(30,50), axes=TRUE, col="light yellow")
plot(wrld_simpl, xlim=c(-130,-80), ylim=c(30,50), axes=TRUE, col="light yellow")
plot(wrld_simpl, xlim=c(-130,-90), ylim=c(30,50), axes=TRUE, col="light yellow")
points(wf.geo$lon, wf.geo$lat, col='orange', pch=20, cex=0.75)
points(wf.geo$lon, acgeo$lat, col=✬red✬, cex=0.75)
points(wf.geo$lon, acgeo$lat, col='red', cex=0.75)
points(wf.geo$lon, wf.geo$lat, col='red', cex=0.75)
plot(wrld_simpl, xlim=c(-130,-90), ylim=c(30,50), axes=TRUE, col="light yellow")
points(rf.geo$lon, rf.geo$lat, col='red', cex=0.75)
points(wf.geo$lon, wf.geo$lat, col='orange', pch=20, cex=0.75)
dups2 = duplicated(wf.geo[, c('species', 'lon', 'lat')])
dups2
sum(dups2)
wfg <- wf.geo[!dups2, ]
nrow(wfg)
dups2 = duplicated(rf.geo[, c('species', 'lon', 'lat')])
rfg <- wf.geo[!dups2, ]
install.packages("raster")
library(raster)
?getData
climate = getData('worldclim', var='tmax, prec, bio', res=0.5, lon=120, lat=38.17)
climate = getData('worldclim', var=c('tmax', 'prec', 'bio'), res=0.5, lon=120, lat=38.17)
climate
climate = getData('worldclim', var='tmax', res=0.5, lon=120, lat=38.17)
files <- list.files(path=paste(system.file(package="dismo"), '/ex/bio1.grd')
files <- list.files(path=paste(system.file(package="dismo")), '/ex/bio1.grd')
files
files <- list.files(path=paste(system.file(package="dismo")), '/ex/bio1.grd', sep="")
file = paste(system.file(package="dismo"), "/ex/bio1.grd", sep="")
library("xlsx")
getwd()
read.xlsx("Clean Historical Data Complete.xlsx", 6, header=TRUE, colClasses=NA)
historical = read.xlsx("Clean_Historical_Data_Complete.xlsx", 6, header=TRUE, colClasses=NA)
plot8 = read.xlsx("Plot_8.xlsx", header=TRUE, colClasses=NA)
?read.xlsx
plot8 = read.xlsx("Plot_8.xlsx", 1, header=TRUE, colClasses=NA)
head(plot8)
ncol(plot8)
ncol(historical)
head(historical)
historical = read.xlsx("Clean_Historical_Data_Complete.xlsx", 6, header=TRUE, colClasses=NA)
head(historical)
head(plot8)
head(historical)
data = historical[0,]
data
nrow(data) = 6000
data = matrix(historical[0,], nrow=780)
data = matrix(names=historical[0,], nrow=780)
data = data.frame(names=names=historical[0,],matrix(nrow=780), ncol=6)
data = data.frame(names=historical[0,],matrix(nrow=780), ncol=6))
data = data.frame(names=historical[0,],matrix(nrow=780, ncol=6))
data = matrix(nrow=780, ncol=6)
numrows = nrow(plot8)
numrows
data = matrix(nrow=numrows, ncol=6)
plot8 = read.xlsx("Plot_8.xlsx", 1, header=TRUE, colClasses=NA)
tail(plot8)
?read.xlsx
plot8 = read.xlsx("Plot_8.xlsx", 1, header=TRUE, endRow=780, colClasses=NA)
nrow(plot8)
tail(plot8)
plot8 = read.xlsx("Plot_8.xlsx", 1, header=TRUE, endRow=781, colClasses=NA)
plot8 = read.xlsx("Plot 8.xlsx", 1, header=TRUE, endRow=781, colClasses=NA)
head(plot8)
